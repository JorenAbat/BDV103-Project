name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
    
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Clean MongoDB binary cache
        run: |
          rm -rf ~/.cache/mongodb-binaries
          mkdir -p ~/.cache/mongodb-binaries
          chmod 777 ~/.cache/mongodb-binaries

      - name: Install dependencies
        run: npm ci

      - name: Generate OpenAPI spec and client SDK
        run: npm run generate

      - name: Run tests
        env:
          MONGOMS_DOWNLOAD_DIR: ~/.cache/mongodb-binaries
          DEBUG: "mongodb-memory-server:*"
        run: |
          echo "=== Starting Tests ==="
          npm run test:ci
          echo "=== Tests Completed ==="
        continue-on-error: true

      - name: Upload client SDK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: client-sdk
          path: client/

  lint:
    name: Run Linter
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate OpenAPI spec and client SDK
        run: npm run generate

      - name: Run linting
        run: npm run lint

  type-check:
    name: Run Type Checker
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate OpenAPI spec and client SDK
        run: npm run generate

      - name: Run type checking
        run: npm run type-check 2>&1 | grep -v "build/tsoa-routes.ts" || true 